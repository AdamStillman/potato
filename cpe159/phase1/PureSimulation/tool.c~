// tool.c, 159

#include <stdio.h>
#include <stdlib.h>
#include "spede.h"
#include "type.h"
#include "extern.h"

typedef struct node *node_ptr;
typedef struct queue *queue_ptr;

struct node{
	int data;
	struct node *prev;
	struct node *next;
}

struct queue{
	node_ptr front;
	node_ptr back;
}

void MyBZero(char *p, int size) {
	queue_ptr myqueue;
	init(&myqueue);
	node_ptr new = (node_ptr)malloc(sizeof(struct node));
	myqueue->front = new;
}

int init(queue_ptr * qp){
	queue_ptr q = (queue_ptr)malloc(sizeof(struct queue));
	q->front = NULL;
	q->back = NULL;
	*qp = q;	//set qp
}

void EnQ(int pid, q_t *p) {
// ?????????????????????????????????????????????????
// show error msg and return if queue's already full
// needs coding
// ?????????????????????????????????????????????????
}

int DeQ(q_t *p) { // return -1 if q is empty
// ?????????????????????????????????????????????????
// needs coding
// ?????????????????????????????????????????????????
}

